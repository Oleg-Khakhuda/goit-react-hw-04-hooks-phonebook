{"version":3,"sources":["Phonebook/ContactForm/ContactForm.js","Phonebook/ContactsList/ContactsList.js","Phonebook/Filter/Filter.js","App.js","index.js","Phonebook/ContactForm/ContactForm.module.css","Phonebook/ContactsList/ContactsList.module.css","Phonebook/Filter/Filter.module.css"],"names":["ContactForm","addNewContact","useState","name","setName","number","setNumber","inputNameId","uuidv4","inputNumberId","handleChange","e","currentTarget","value","resetForm","className","s","form","onSubmit","preventDefault","label","htmlFor","input","type","id","pattern","title","required","onChange","button","ContactsList","contacts","handleDelete","list","map","contact","listItem","deleteButton","onClick","Filter","changeFilter","inputFilterId","App","localContacts","localStorage","getItem","JSON","parse","setContacts","filter","setFilter","useEffect","window","setItem","stringify","find","alert","prev","filterValue","target","normalizedFilter","toLowerCase","includes","handleFilter","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6b7cd286.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({addNewContact}) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const inputNameId = uuidv4();\r\n    const inputNumberId = uuidv4();\r\n\r\n    const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        addNewContact(name, number);\r\n        resetForm();\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setNumber('');\r\n        setName('');\r\n  };\r\n\r\n    return (\r\n        <form className={s.form} onSubmit={handleSubmit}>  \r\n        <label className={s.label} htmlFor={inputNameId}>Name</label>\r\n        <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            value={name}\r\n            id={inputNameId}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n        />\r\n        <label className={s.label} htmlFor={inputNumberId}>Number</label>\r\n        <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            value={number}\r\n            id={inputNumberId}\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n        />\r\n            <button className={s.button} type='submit'>Add contact</button>\r\n        </form>\r\n    ) \r\n}\r\n\r\nexport default ContactForm;","import s from './ContactsList.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactsList = ({ contacts, handleDelete }) => {\r\n    return (\r\n        <ul className={s.list}>        \r\n            {\r\n                contacts.map(contact => (\r\n                    <li className={s.listItem}\r\n                    key={contact.id} >\r\n                    {contact.name}:  {contact.number}\r\n                    <button\r\n                        className={s.deleteButton}\r\n                        type=\"button\"\r\n                        id={contact.id}\r\n                        onClick={handleDelete}\r\n                    >Delete</button>\r\n                     </li>))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({changeFilter}) => {\r\n  const inputFilterId = uuidv4()\r\n        \r\n    return (\r\n        <form className={s.form}>\r\n            <label className={s.label} htmlFor={inputFilterId}>Find contacts by name</label>\r\n            <input\r\n                className={s.input}\r\n                type=\"text\"\r\n                id={inputFilterId}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                onChange={changeFilter}\r\n            />\r\n      </form>    \r\n    );\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n","import ContactForm from './Phonebook/ContactForm/ContactForm';\nimport ContactsList from './Phonebook/ContactsList/ContactsList';\nimport Filter from './Phonebook/Filter/Filter';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst App = () => {\n\n  const [contacts, setContacts] = useState(() => {\n    const localContacts = localStorage.getItem('contacts');\n \n    if (localContacts) {\n      return JSON.parse(localContacts);\n    } else {\n      return [];\n    }\n  }\n  );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addNewContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts!`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      alert(`${number} is already in contacts!`);\n    } else\n      setContacts(prev => [...prev, contact]);\n  };\n\n  const changeFilter = e => {\n    const filterValue = e.target.value\n    setFilter(filterValue);\n  };\n\n  const handleFilter = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const handleDelete = e => {\n    setContacts(contacts.filter(\n        contact => contact.id !== e.target.id,\n      ),\n    );\n  };\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={addNewContact} />\n        <h1>Contacts</h1>\n        <Filter changeFilter={changeFilter} />\n        <ContactsList contacts={handleFilter()} handleDelete={handleDelete} />\n      </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__29fIC\",\"input\":\"ContactForm_input__1Dvu7\",\"label\":\"ContactForm_label__3-9GI\",\"button\":\"ContactForm_button__Jm76U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2Ca3y\",\"listItem\":\"ContactsList_listItem__mKj65\",\"deleteButton\":\"ContactsList_deleteButton__JIMQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__4fRlV\",\"label\":\"Filter_label__UUmHE\",\"input\":\"Filter_input__11IEC\"};"],"sourceRoot":""}